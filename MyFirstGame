public class GameWindow extends JFrame {
    private static GameWindow game_window;
    private static long last_frame_time;
    private static Image background;
    private static Image asteroid;
    private static Image game_over;
    private static Image win;
    private static float asteroid_left = 200;
    private static float asteroid_top = -50;
    private static float asteroid_speed = 200;
    private static int score;

    public static void main(String[] args) throws IOException {
        background = ImageIO.read(GameWindow.class.getResourceAsStream("background.jpg"));
        asteroid = ImageIO.read(GameWindow.class.getResourceAsStream("asteroid.png"));
        game_over = ImageIO.read(GameWindow.class.getResourceAsStream("game_over.png"));
        win = ImageIO.read(GameWindow.class.getResourceAsStream("win.jpg"));
        game_window = new GameWindow();
        game_window.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        game_window.setLocation(500, 200);
        game_window.setSize(800, 600);
        last_frame_time= System.nanoTime();
				
      GameField game_field = new GameField();
        game_field.addMouseListener(new MouseAdapter() {
            @Override
            public void mousePressed(MouseEvent e) {
                int x= e.getX();
                int y = e.getY();
                float asteroid_right = asteroid_left +asteroid.getWidth(null);
                float asteroid_bottom = asteroid_top+asteroid.getHeight(null);
                boolean in_asteroid = x>= asteroid_left&& x<=asteroid_right&&y>asteroid_top&& y<=asteroid_bottom;
                if (in_asteroid) {
                    asteroid_top = -50;
                    asteroid_left = (int) (Math.random() * (game_field.getWidth() - asteroid.getWidth(null)));
                    asteroid_speed += 30;
                    score++;
                    game_window.setTitle("Поймали (число раз) = " + score);
                }
            }
        });
        game_window.add(game_field);
        game_window.setResizable(false);
        game_window.setVisible(true);
    }
    private static void onRepaint(Graphics g) {
        long current_time = System.nanoTime();
        float delta_time = (current_time - last_frame_time)*0.000000001f;
        last_frame_time = current_time;
        asteroid_top  = asteroid_top + asteroid_speed*delta_time/2;
        asteroid_left = asteroid_left +asteroid_speed*delta_time/5;

        g.drawImage(background,0,0,null);
        g.drawImage(asteroid,(int)asteroid_left,(int)asteroid_top,null);
        if (asteroid_top >game_window.getHeight()) {
            if (score < 2)
                g.drawImage(game_over, 250, 250, null);
            if (score >= 2)
                g.drawImage(win, 100,100,null);
        }

    }
    private static class GameField extends JPanel {
        @Override
        protected void paintComponent (java.awt.Graphics g) {
            super.paintComponent(g);
            onRepaint(g);
            repaint();
        }
    }
}
